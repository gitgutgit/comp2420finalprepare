0. BASIC

q3q4_df = pd.read_csv('./data/Q3Q4.csv')
q3q4_df.isna().sum().head(5)   섬과 헤드를 동시에


print(q3q4_df['Transmission'].unique()) 유니크 종류탐색

1.BOX PLOT

sns.boxplot(x='Fuel Type', y='Fuel Consumption Comb (L/100 km)', hue='Transmission', data=q3q4_df)  
# 매우 매우 유용함 뭔가 성별 남녀 처럼 또는 강아지 고양이 토끼 처럼 새로운 카테고리인데 같은 형태로 분리할떄 유용
plt.title('Fuel Consumption Comb by different Fuel Type and Transmission')
plt.show()

1.2LINE PLOT

# YOUR CODE HERE
sns.lineplot(x = 'Engine Size(L)', y="Fuel Consumption Comb (L/100 km)", hue = 'Transmission' , data=q3q4_df)
plt.title('Engine Size(L) vs Fuel Consumption Comb (L/100 km)') # 문난한 타이틀이름 for differnet tra.. 붙히든말든
plt.show()



2.Null hypo 에 유용 alternative에 less greater 설정가능!1 0.05가 국룰

suv_standard_fc = q3q4_df[q3q4_df['Vehicle Class'] == 'SUV']['Fuel Consumption Comb (mpg)']
full_size_fc = q3q4_df[q3q4_df['Vehicle Class'] == 'FULL-SIZE']['Fuel Consumption Comb (mpg)']
t, p = stats.ttest_ind(suv_standard_fc, full_size_fc, alternative='less') #alternative less setting 가능
print(p)





Additional
간편 클러스터 SCATTER PLO 
# YOUR CODE HERE
q4q5_df = pd.read_csv('./data/Q4Q5.csv')
pca = PCA(n_components=2)
cluster_df = q4q5_df[['Fuel Consumption Comb (L/100 km)', 'CO2 Emissions(g/km)', 'Engine Size(L)', 'Cylinders']] #사용하라는것만 넣기
km_model = KMeans(n_clusters=5) #클러스터는 자료가 잘되어있단 가정하엔 쉬움 그냥 넣으면됨
reduced_df = pca.fit_transform(cluster_df) # pca reduced 거의공식
km_model.fit(reduced_df) # df넣는데 여기선 reduced넣고
sns.scatterplot(x=reduced_df[:, 0], y=reduced_df[:,1], hue = map(lambda x : 'Cluster '+str(x), km_model.labels_ + 1)) 
# 뽑아보면알겠지만 pca되서 0 과 1임 하나가 x하나가 y 그냥외워!
plt.title('KMeans K = 5')
plt.show()